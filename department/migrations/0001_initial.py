# Generated by Django 4.0.3 on 2022-05-17 09:19

import department.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment', models.FloatField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Зарплата')),
                ('type', models.CharField(choices=[('Срочный', 'Срочный'), ('Бессрочный', 'Бессрочный')], max_length=20)),
                ('start_date', models.DateField(verbose_name='Дата начала действия договора')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Дата начала действия договора')),
            ],
            options={
                'verbose_name': 'Трудовой договор',
                'verbose_name_plural': 'Трудовые договора',
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nameIns', models.CharField(max_length=100, verbose_name='Наименование образовательного учреждения')),
                ('nameDoc', models.CharField(max_length=100, verbose_name='Наименование документа об образовании')),
                ('series', models.PositiveBigIntegerField(verbose_name='Серия')),
                ('number', models.PositiveBigIntegerField(verbose_name='Номер')),
                ('speciality', models.CharField(max_length=100, verbose_name='Направление или специальность')),
                ('qalification', models.CharField(choices=[('Нет', 'Нет'), ('Дошкольное образование', 'Дошкольное образование'), ('Начальное общее образование', 'Начальное общее образование'), ('Основное общее образование', 'Основное общее образование'), ('Среднее общее образование', 'Среднее общее образование'), ('Среднее профессиональное образование', 'Среднее профессиональное образование'), ('Высшее образование — бакалавриат', 'Высшее образование — бакалавриат'), ('Высшее образование — специалитет, магистратура', 'Высшее образование — специалитет, магистратура'), ('Высшее образование — подготовка кадров высшей квалификации', 'Высшее образование — подготовка кадров высшей квалификации'), ('Дополнительное образование детей и взрослых', 'Дополнительное образование детей и взрослых'), ('Дополнительное профессиональное образование', 'Дополнительное профессиональное образование'), ('Профессиональное обучение', 'Профессиональное обучение'), ('Другое', 'Другое')], max_length=100, verbose_name='Квалификация')),
                ('graduationYear', models.PositiveIntegerField(validators=[django.core.validators.MinLengthValidator(4), django.core.validators.MaxLengthValidator(4)], verbose_name='Год окончания')),
            ],
            options={
                'verbose_name': 'Документ об образовании',
                'verbose_name_plural': 'Документы об образовании',
            },
        ),
        migrations.CreateModel(
            name='EmpBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('give_date', models.DateField(verbose_name='Дата выдачи')),
                ('position', models.CharField(max_length=150, verbose_name='Должность')),
                ('work_start_date', models.DateField(verbose_name='Дата принятия на работу')),
                ('work_end_date', models.DateField(blank=True, null=True, verbose_name='Дата увольнения или выхода на пенсию')),
                ('work_experience', models.PositiveIntegerField(default=0, editable=False, verbose_name='Стаж работы')),
            ],
            options={
                'verbose_name': 'Трудовая книжка',
                'verbose_name_plural': 'Трудовые книжки',
            },
        ),
        migrations.CreateModel(
            name='EmpFamily',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marStatus', models.CharField(choices=[('не замужем / не женат', 'не замужем / не женат'), ('замужем / женат', 'замужем / женат'), ('разведен / разведена', 'разведен / разведена'), ('вдовец / вдова', 'вдовец / вдова')], max_length=50, verbose_name='Семейное положение')),
                ('maidenName', models.CharField(blank=True, max_length=50, null=True, verbose_name='Девичья фамилия')),
            ],
            options={
                'verbose_name': 'Семья',
                'verbose_name_plural': 'Семьи',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstName', models.CharField(max_length=50, verbose_name='Имя')),
                ('middleName', models.CharField(max_length=50, verbose_name='Фамилия')),
                ('lastName', models.CharField(max_length=50, verbose_name='Отчество')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Логин работника')),
            ],
            options={
                'verbose_name': 'Работник',
                'verbose_name_plural': 'Работники',
            },
        ),
        migrations.CreateModel(
            name='FamilyComposition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstName', models.CharField(max_length=50, verbose_name='Имя')),
                ('middleName', models.CharField(max_length=50, verbose_name='Фамилия')),
                ('lastName', models.CharField(max_length=50, verbose_name='Отчество')),
                ('degreeOfKinship', models.CharField(choices=[('Жена', 'Жена'), ('Муж', 'Муж'), ('Сын', 'Сын'), ('Дочь', 'Дочь')], max_length=50, verbose_name='Степень родства')),
            ],
            options={
                'verbose_name': 'Член семьи',
                'verbose_name_plural': 'Члены семьи',
            },
        ),
        migrations.CreateModel(
            name='Passport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('series', models.PositiveIntegerField(validators=[django.core.validators.MinLengthValidator(4), django.core.validators.MaxLengthValidator(4)], verbose_name='Серия')),
                ('number', models.PositiveIntegerField(validators=[django.core.validators.MinLengthValidator(6), django.core.validators.MaxLengthValidator(6)], verbose_name='Номер')),
                ('code', models.CharField(max_length=7, validators=[django.core.validators.MinLengthValidator(7), django.core.validators.MaxLengthValidator(7), department.models.validate_code], verbose_name='Код подразделения')),
                ('place', models.CharField(max_length=250, verbose_name='Кем выдан')),
                ('date', models.DateField(verbose_name='Дата выдачи')),
                ('bornPlace', models.CharField(max_length=250, verbose_name='Место рождения')),
                ('living_place', models.CharField(max_length=250, verbose_name='Место прописки')),
            ],
            options={
                'verbose_name': 'Паспорт',
                'verbose_name_plural': 'Паспорта',
            },
        ),
        migrations.CreateModel(
            name='PersonalFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ITN', models.PositiveBigIntegerField(validators=[django.core.validators.MinLengthValidator(10), django.core.validators.MaxLengthValidator(12)], verbose_name='ИНН')),
                ('insPolicy', models.PositiveBigIntegerField(validators=[django.core.validators.MinLengthValidator(16), django.core.validators.MaxLengthValidator(16)], verbose_name='Номер мед. полиса')),
                ('snils', models.PositiveBigIntegerField(validators=[django.core.validators.MinLengthValidator(14), django.core.validators.MaxLengthValidator(14), department.models.validate_sninls], verbose_name='СНИЛС')),
                ('phoneNum', models.CharField(max_length=12, validators=[django.core.validators.MinLengthValidator(11), django.core.validators.MaxLengthValidator(12), department.models.validate_phone], verbose_name='Номер телефона')),
                ('bornDate', models.DateField(verbose_name='Дата рождения')),
                ('sex', models.CharField(choices=[('М', 'М'), ('Ж', 'Ж')], max_length=1, verbose_name='Пол')),
                ('fact_living_place', models.CharField(max_length=250, verbose_name='Фактическое место проживания')),
                ('contract', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='department.contract', verbose_name='Трудовой договор')),
                ('education', models.ManyToManyField(to='department.education', verbose_name='Образование')),
                ('empBook', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='department.empbook', verbose_name='Трудовая книжка')),
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='department.employee', verbose_name='Логин работника')),
                ('family', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='department.empfamily', verbose_name='Семья')),
                ('passport', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='department.passport', verbose_name='Паспорт')),
            ],
            options={
                'verbose_name': 'Личное дело',
                'verbose_name_plural': 'Личные дела',
            },
        ),
        migrations.AddField(
            model_name='empfamily',
            name='familyComposition',
            field=models.ManyToManyField(to='department.familycomposition', verbose_name='Состав семьи'),
        ),
    ]
